<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:jee="http://www.springframework.org/schema/jee" xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:security="http://www.springframework.org/schema/security"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
			http://www.springframework.org/schema/mvc
			http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider
				user-service-ref="userDao">
			<security:password-encoder ref="passwordEncoder"></security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>

	<security:http realm="Protected API" use-expressions="true"
	auto-config="false" create-session="stateless" entry-point-ref="unauthorizedEntryPoint"
	authentication-manager-ref="authenticationManager">

	<security:custom-filter ref="authenticationTokenProcessingFilter"
		position="FORM_LOGIN_FILTER" />
	<security:access-denied-handler
		error-page="/index.html" />
	<security:intercept-url pattern="/rest/user/authenticate"
		access="permitAll" />
	<security:intercept-url method="GET"
		pattern="/" access="hasAnyRole('admin','user')" />
	<security:intercept-url method="PUT"
		pattern="/" access="hasAnyRole('admin','user')" />
	<security:intercept-url method="POST"
		pattern="/" access="hasAnyRole('admin','user')" />
	<security:intercept-url method="DELETE"
		pattern="/" access="hasAnyRole('admin','user')" />
	<!-- <security:intercept-url method="GET"
		pattern="/rest/service/**" access="hasAnyRole('admin','user')" />
	<security:intercept-url method="PUT"
		pattern="/rest/service/**" access="hasAnyRole('admin','user')" />
	<security:intercept-url method="POST"
		pattern="/rest/service/**" access="hasAnyRole('admin','user')" />
	<security:intercept-url method="DELETE"
		pattern="/rest/service/**" access="hasAnyRole('admin','user')" /> -->
</security:http>
	<bean id="unauthorizedEntryPoint" class="com.itc.zeas.usermanagement.user.security.rest.UnauthorizedEntryPoint" />
	<bean
		class="com.itc.zeas.usermanagement.user.security.rest.AuthenticationTokenProcessingFilter"
		id="authenticationTokenProcessingFilter">
		<constructor-arg ref="userDao" />
	</bean>
	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.password.StandardPasswordEncoder">
		<constructor-arg value="ThisIsASecretSoChangeMe" />
	</bean>
	<bean id="authLogManager"
		class="com.itc.zeas.usermanagement.AuthenticationLogManager" />
	<bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor"/>

</beans>