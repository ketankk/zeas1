# List Sourcer
LIST_ENTITY = SELECT * FROM entity WHERE TYPE = ?
# Add Sourcer
INSERT_ENTITY = INSERT INTO entity	(name,type,json_data,is_active,created,created_by,last_modified,updated_by) VALUES(?,?,?,?,now(),?,now(),?)

# Edit Sourcer
UPDATE_ENTITY = UPDATE  entity SET  NAME =  ? ,  JSON_DATA =  ?, UPDATED_BY =  ?,LAST_MODIFIED =  NOW() WHERE ID = ? AND TYPE = ?

# Get Sourcer By ID

SELECT_ENTITY_BY_ID =SELECT * FROM entity WHERE ID = ?  AND TYPE = ?

#Delete Sourcer
DELETE_ENTITY = DELETE FROM entity WHERE ID = ?

#Generalised query to fetch names of particular type of entities.
GET_ENTITY_NAMES = SELECT NAME FROM entity WHERE TYPE = ?

#Fetches list of items to be displayed in UI for particular component
GET_ATTRIBUTE_NAMES = SELECT ENTRY FROM whitelist_config WHERE CONTAINER = ? AND NAME = ?

#List Users
LIST_USERS = SELECT ID, NAME,PASSWORD , EMAIL, DISPLAY_NAME, ROLES FROM USER INNER JOIN USER_ROLES ON USER.ID = USER_ROLES.USER_ID

# Get User By ID
SELECT_USER_BY_ID = SELECT ID, NAME,PASSWORD , EMAIL, DISPLAY_NAME, ROLES FROM USER INNER JOIN USER_ROLES ON USER.ID = USER_ROLES.USER_ID WHERE USER.ID =?

# Get user password
GET_USER_PASSWORD = SELECT PASSWORD FROM USER WHERE NAME = ?

#Add new User
INSERT_USER = INSERT INTO USER(NAME,PASSWORD,EMAIL,DISPLAY_NAME) VALUES(?,?,?,?)
INSERT_ROLES= INSERT INTO USER_ROLES(USER_ID,ROLES) VALUES(?,?)

#Update user
UPDATE_USER_PASSWORD = UPDATE USER SET PASSWORD =  ? WHERE name = ?
UPDATE_USER = UPDATE USER u1 LEFT JOIN USER_ROLES r1 ON u1.id = r1.user_id SET u1.name = ?,u1.password=?,u1.email =?, u1.display_name =? ,r1.roles = ? where u1.id= ?

#Check availabilty
CHECK_USER_AVAILABILITY = select name from user where name = ?

#Delete User
DELETE_USER = DELETE FROM USER WHERE ID = ?
DELETE_USER_ROLES = DELETE FROM user_roles WHERE User_id = ?

#get role id by username
GET_USER_ID= SELECT ID FROM USER WHERE NAME = ?

#get entity id by name
GET_ENTITY_BY_NAME= SELECT * FROM entity WHERE NAME = ?

# Get JSON for a given Entity
GET_JSON_FOR_ENTITY = SELECT JSON_DATA FROM entity WHERE NAME = ?

#get Ingestion log details
SELECT_INGESTION_LOG =  SELECT * FROM data_ingestion_log WHERE DATA_INGESTION_ID = ? LIMIT 0,10

#get Ingestion log details
SELECT_STAGE_LOG =  SELECT * FROM pipeline_stage_log WHERE pipeline_run_id = ? order by run_start_time

# List processed pipeline
LIST_PIPELINE = select distinct TYPE AS pipeline_name,NAME AS output_dataset from entity where type='dataset'


# List MachineLearning Analysis  pipeline
LIST_MLPIPELINE = SELECT * FROM ml_analysis order by ml_id DESC;

# Add MachineLearning Analysis  output
INSERT_MLANALYSIS = INSERT INTO ml_analysis(training,testing,algorithm,accuracy) VALUES(?,?,?,?)

#Delete Sourcer
DELETE_MLANALYSIS = DELETE FROM ml_analysis WHERE ml_id = ?

#Gives Ingestion job Status
GET_INGESTION_JOB_STATUS=select JOB_STATUS from data_ingestion_log where DATA_INGESTION_LOG_ID = (select max(DATA_INGESTION_LOG_ID) from data_ingestion_log where DATA_INGESTION_ID=?)

#Get Data Schema Profile Name
GET_SCHMEA_NAME=SELECT NAME FROM entity WHERE TYPE = ? AND UPPER(NAME) = ?


#Add Spark Application sourcer
INSERT_STREAM_DRIVER=INSERT INTO consumer_driver(driver_id,consumer_name,status,start_at,start_by) VALUES(?,?,?,NOW(),?)

#Edit Spark Application 
UPDATE_STREAM_DRIVER=UPDATE consumer_driver SET  STATUS = ?,  STOP_BY = ?,STOP_AT =NOW() WHERE DRIVER_ID =?

#list of drivers currently running
LIST_DRIVER=SELECT DRIVER_ID,CONSUMER_NAME,START_AT,START_BY FROM consumer_driver where STATUS = ? AND CONSUMER_NAME= ?

#Get the job count for specific counsumer name which is in running state
LIST_JOB_COUNT = SELECT count(*) AS COUNT FROM consumer_driver where  CONSUMER_NAME= ? and STATUS = ?

#list all Running Jobs
LIST_RUNNING_DRIVER=SELECT DRIVER_ID,CONSUMER_NAME,START_AT,START_BY FROM consumer_driver where STATUS = ?

#get List of records related to Ingestion profile 
GET_INGESTION_DETAILS=select type,json_data from entity where id in (?,?,?,?)

#copy the Ingestion details to archive table
COPY_TO_ARCHIVE_TABLE=insert into schema_archive(schema_id, schema_name,dataset_json,source_json,schema_json,schedular_json,user_name) Values(?,?,?,?,?,?,?)

#deleting Entity id's after moving to archive
DELETE_ENTITY_IDS=DELETE FROM entity WHERE ID in (?,?,?,?)

LIST_ARCHIVE_PROFILES = SELECT schema_id, schema_name FROM schema_archive
SELECT_ARCHIVE_SCHEMA = SELECT schema_name, schema_json, source_json, dataset_json, schedular_json, user_name FROM schema_archive where schema_id = ?
DELETE_ARCHIVE_SCHEMA = DELETE FROM schema_archive WHERE schema_id = ?
SELECT_DATASET_JSON = SELECT dataset_json FROM schema_archive WHERE schema_id = ?

GET_OOZIE_JOB_ID = select OOZIEJOBID from  PipelineOozieJobMap where PIPELINEJOBID = ?

GET_OOZIE_ACTION_STATUS = select id, start_time, end_time, status from WF_ACTIONS where wf_id = ?
 